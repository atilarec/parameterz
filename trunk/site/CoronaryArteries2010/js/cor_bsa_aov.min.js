var aov, bsa, limit, sites; limit = 2; function Cor_b(a) { this.a1 = a.a1; this.b1 = a.b1; this.a2 = a.a2; this.b2 = a.b2 } Cor_b.prototype.mean = function() { return this.a1 + this.b1 * Math.sqrt(bsa) }; Cor_b.prototype.sd = function() { return Math.sqrt(bsa) * this.b2 + this.a2 }; Cor_b.prototype.zscore = function(a) { return (a - this.mean()) / this.sd() }; Cor_b.prototype.limit = function(a) { return a * this.sd() + this.mean() };
var sites_b = { LMCA: { label: "LMCA", cor: new Cor_b({ a1: -0.1817, b1: 2.9238, a2: 0.1801, b2: 0.253 }) }, LAD: { label: "LAD", cor: new Cor_b({ a1: -0.1502, b1: 2.2672, a2: 0.1709, b2: 0.2293 }) }, CIRC: { label: "CIRC", cor: new Cor_b({ a1: -0.2716, b1: 2.3458, a2: 0.1142, b2: 0.3423 }) }, PROXRCA: { label: "PROXRCA", cor: new Cor_b({ a1: -0.3039, b1: 2.7521, a2: 0.1626, b2: 0.2881 }) }, MIDRCA: { label: "MIDRCA", cor: new Cor_b({ a1: -0.306, b1: 2.4078, a2: 0.1324, b2: 0.3259 }) }, DISTRCA: { label: "DISTRCA", cor: new Cor_b({ a1: -0.3185, b1: 2.3295, a2: 0.1099, b2: 0.3198 })} };
function Cor_a(a) { this.a1 = a.a1; this.b1 = a.b1; this.sd = a.sd } Cor_a.prototype.mean = function() { return this.a1 + this.b1 * aov }; Cor_a.prototype.zscore = function(a) { return (a - this.mean()) / this.sd }; Cor_a.prototype.limit = function(a) { return a * this.sd + this.mean() };
var sites_a = { LMCA: { label: "LMCA", cor: new Cor_a({ a1: 0.3593, b1: 0.1398, sd: 0.3507 }) }, LAD: { label: "LAD", cor: new Cor_a({ a1: 0.2364, b1: 0.1109, sd: 0.3409 }) }, CIRC: { label: "CIRC", cor: new Cor_a({ a1: 0.194, b1: 0.1081, sd: 0.3673 }) }, PROXRCA: { label: "PROXRCA", cor: new Cor_a({ a1: 0.1812, b1: 0.132, sd: 0.3579 }) }, MIDRCA: { label: "MIDRCA", cor: new Cor_a({ a1: 0.1827, b1: 0.1104, sd: 0.3748 }) }, DISTRCA: { label: "DISTRCA", cor: new Cor_a({ a1: 0.2191, b1: 0.1003, sd: 0.3627 })} };
function CalculateZScores() {
    switch ($("input[name=ind_var]:checked").val()) {
        case "bsa": $(".aov_row input").attr("disabled", true); $(".bsa_row input, .bsa_row select").attr("disabled", false); var a, b, c; a = parseFloat($("#txtHT").val()); b = parseFloat($("#txtWT").val()); c = $("#cmbBSA").val(); if (a && b) bsa = CalcBSA(a, b, c); else if (b && c == "Dreyer") bsa = CalcBSA("", b, c); else return false; $("#BSA").html(bsa.toFixed(2) + " M<sup>2</sup>").attr("title", bsa); sites = sites_b; isNaN(bsa) || updateAll(); break; case "aov": $(".bsa_row input, .bsa_row select").attr("disabled",
true); $(".aov_row input").attr("disabled", false); aov = parseFloat($("#txtAOV").val()); sites = sites_a; isNaN(aov) || updateAll()
    } 
} function updateAll() { $.each(sites, function() { var a, b, c; a = $("#" + this.label + "Mean"); b = $("#" + this.label + "Range"); c = this.cor.mean().toFixed(2); a.text(c); a = "(" + this.cor.limit(-limit).toFixed(2) + " - " + this.cor.limit(limit).toFixed(2) + ")"; b.text(a) }); $(".site").change() }
function updateSite(a, b) { b = parseFloat(b); a = sites[a]; var c = $("#" + a.label + "Z"); if (isNaN(b)) c.text("").removeClass("normal borderline mild moderate severe").attr("title", ""); else { var d = a.cor.zscore(b); c.text(d.toFixed(2)).removeClass("normal borderline mild moderate severe").addClass(zscoreFlag(d)).attr("title", calcPercentile(d) + " %-ile") } }
function resetForm() { $(".results").text("").removeClass("normal borderline mild moderate severe").attr("title", ""); aov = bsa = null; $(".bsa_row input, .bsa_row select").removeAttr("disabled"); $(".aov_row input").attr("disabled", true) } $(function() { $.browser.msie && $("input:radio").click(function() { this.blur(); this.focus() }); $(":input:radio").change(CalculateZScores) });